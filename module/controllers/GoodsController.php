<?php
/**
 * Created by PhpStorm.
 * User: zpp
 * Date: 2017/2/24
 * Time: 23:27
 */
namespace app\module\controllers;
use app\models\Goods;
use app\models\Photo;
use Yii;
use app\models\Uploads;
use yii\base\Exception;
use yii\data\Pagination;
use yii\web\UploadedFile;
use yii\web\Controller;
class GoodsController extends CommonController{
    public $layout='navcommon';
    private $request;

    /**
     * 初始化 $request;
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->request=Yii::$app->request;
    }

    /**
     * 商品列表显示
     * @return string
     */
    public function actionList(){
        $goods=new Goods();
        $pageSize=Yii::$app->params['page']['pageSize'];//页码数
        $page=new Pagination([
            'defaultPageSize'=>$pageSize,
            'totalCount'=>Goods::find()->where(['is_delete'=>0])->count(),
        ]);
        $goodsList=Goods::find()
            ->where(['is_delete'=>0])
            ->offset($page->offset)
            ->limit($page->limit)
            ->orderBy('goods_id DESC')
            ->all();
        return $this->render('list',['page'=>$page,'goodsList'=>$goodsList]);
    }

    /**
     * 商品回收站列表
     * @return string
     */
    public function actionShow(){
        //$goods=new Goods();
        $pageSize=Yii::$app->params['page']['pageSize'];//页码数
        $page=new Pagination([
            'defaultPageSize'=>$pageSize,
            'totalCount'=>Goods::find()->where(['is_delete'=>1])->count(),
        ]);
        $goodsList=Goods::find()
            ->where(['is_delete'=>1])
            ->offset($page->offset)
            ->limit($page->limit)
            ->all();
        return $this->render('recycle',['page'=>$page,'goodsList'=>$goodsList]);
    }

    /**
     * 商品回收
     * @param $goods_id
     */
    public function actionRecycle($goods_id){
        $good=Goods::findOne($goods_id);
        $res=$good->is_delete=1;
        if($good->save())
        {
            $this->success('回收成功');
        }
        else
        {
            $this->error('回收失败');
        }
        $this->redirect(['goods/list']);
    }
    /**
     * 商品还原
     * @param $goods_id
     */
    public function actionRestore($goods_id){
        $good=Goods::findOne($goods_id);
        $res=$good->is_delete=0;
        if($good->save())
        {
            $this->success('还原成功');
        }
        else
        {
            $this->error('还原失败');
        }
        $this->redirect(['goods/show']);
    }

    /**
     * 商品添加
     * @return string
     */
    public function actionAdd(){
        $goods=new goods();
        $upload=new Uploads;//文件上传类
        $request=Yii::$app->request;
        if($request->isPost)
        {
            $upload->brand_logo=UploadedFile::getInstance($goods, 'goods_img');//获取文件赋值给文件上传类
            $goods_img=$upload->upload();//文件上传名
            $post=$request->post();
            $post['Goods']['goods_img']=$goods_img;
            $post['Goods']['add_time']=time();
            $post['Goods']['goods_sn']=$goods->getGoodsNum();//商品号
            $post['Goods']['promote_start_date']=strtotime($post['Goods']['promote_start_date']);
            $post['Goods']['promote_end_date']=strtotime($post['Goods']['promote_end_date']);
            if($goods->load($post)&&$goods->save())
            {
                $this->success('添加成功');
            }
            else
            {
                $this->error('添加失败');
            }
        }
        $cateList=$this->getCategory();//分类下拉框
        $brandList=$this->getBrand();//品牌下拉框
        return $this->render('add',['goods'=>$goods,'cateList'=>$cateList,'brandList'=>$brandList]);

    }

    /**
     * 商品删除
     * @param $goods_id
     * @throws \Exception
     */
    public function actionDel($goods_id){
        $res=Goods::findOne($goods_id)->delete();
        if($res>0)
        {
            $this->success('删除成功');
        }
        else
        {
            $this->error('删除失败');
        }
        $this->redirect(['goods/show']);
    }

    /**
     * 商品修改
     * @param $goods_id
     * @return string
     */
    public function actionUpdate($goods_id){
        $goods=Goods::findOne($goods_id);
        if($goods['promote_start_date']!=''&&$goods['promote_end_date']!='')
        {
            $goods['promote_start_date']=date('m/d/Y',$goods['promote_start_date']);//时间戳转换显示
            $goods['promote_end_date']=date('m/d/Y',$goods['promote_end_date']);
        }
        $upload=new Uploads;//文件上传类
        $request=Yii::$app->request;
        if($request->isPost)
        {
            $upload->brand_logo=UploadedFile::getInstance($goods, 'goods_img');//获取文件赋值给文件上传类

            $post=$request->post();

            $post['Goods']['add_time']=time();
            $post['Goods']['promote_start_date']=strtotime($post['Goods']['promote_start_date']);
            $post['Goods']['promote_end_date']=strtotime($post['Goods']['promote_end_date']);
            if($upload->brand_logo===null)//判断图片是否修改
            {
                $post['Goods']['goods_img']=$goods->goods_img;
            }
            else
            {
                $goods_img=$upload->upload();//文件上传类检测并反值
                $post['Goods']['goods_img']=$goods_img;
            }

            if($goods->load($post)&&$goods->save())
            {
                $this->success('修改成功');
            }
            else
            {
                $this->error('修改失败');
            }
        }

        $cateList=$this->getCategory();//分类下拉框
        $brandList=$this->getBrand();//品牌下拉框

        return $this->render('update',['goods'=>$goods,'cateList'=>$cateList,'brandList'=>$brandList]);

    }

    /**
     * 相册列表
     * @return string
     */
    public function actionPhotoList()
    {
        $goods_id=intval(Yii::$app->request->get('goods_id'));
        $goods_name=Yii::$app->request->get('goods_name');
        try{
            if(empty($goods_id)||!isset($goods_id))
            {
                throw new Exception();
            }
            $photo=new Photo();
            $photoList=$photo->getPhotoList($goods_id);//获取商品附图列表
            $img=json_decode($photoList['img']);//json转换

            $data=[
                'goods_name'=>$goods_name,
                'img'=>$img,
                'goods_id'=>$goods_id,
            ];
            return $this->render('photoList',$data);
        }
        catch(Exception $e)
        {
            $this->redirect(['goods/list']);
        }

    }
    /**
     * 商品附图添加
     */
    public function actionPhotoAdd()
    {
        $goods_id=intval(Yii::$app->request->get('goods_id'));
        try
        {
            if(empty($goods_id)||$goods_id<0)
            {
                throw new Exception();
            }
            $photo=new Photo();
            $upload=new Uploads();
            if($this->request->isPost)
            {
                $upload->brand_logo=UploadedFile::getInstances($photo,'img');
                $imgArr=$upload->pubFile();//得到图片上传名字数组
                $img=json_encode($imgArr);
                if($img=='null')//当$img为空时json_encode转换变为string类型'null';
                {
                    $post['Photo']['img']='';
                }
                else
                {
                    $post['Photo']['img']=$img;

                }
                $post['Photo']['goods_id']=$goods_id;

                if($photo->load($post)&&$photo->save())
                {
                    $this->success('相片上传成功');
                }
                else
                {
                    $this->error('照片上传失败');
                }



            }
            return $this->render('photoAdd',['photo'=>$photo]);
        }
        catch(Exception $e)
        {

            $this->redirect(['goods/list']);
        }


    }
}
?>