<?php
/**
 * Created by PhpStorm.
 * User: zpp
 * Date: 2017/2/20
 * Time: 17:07
 */
namespace app\controllers;
use app\models\Address;
use vendor\alipay\AlipayPay;
use Yii;
use app\models\Region;
use app\models\Order;
use yii\web\response;
use app\models\PayLog;
use app\models\Goods;
use app\models\OrderGoods;
use yii\base\Exception;
use app\models\Cart;
use app\models\Category;
class OrderController extends CommonController{
    public $layout=false;
    private $request;
    private $address;
    private $region;
    private $cart;
    private $order;
    public function beforeAction($action)// 要关闭 csrf 验证的操作ID(异步验证)
    {
        $notId=['notify'];
        $id=$action->id;
        if(in_array($id,$notId))
        {
            $action->controller->enableCsrfValidation=false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function init(){
        parent::init();
        $this->request=Yii::$app->request;
        $category=new Category();
        $this->address=new Address();
        $this->cart=new Cart();
        $this->region=new Region();
        $this->order=new Order();
        $cateList=$category->getCateList();
        $this->view->params['menu']=$cateList;//分类导航标记区分是否显示
    }

    /**
     * 设置收货人信息地址
     * @return string
     */
    public function actionConsign(){
        $country=$this->region->find()->where(['parent_id'=>0])->asArray()->all();
        if($this->request->isPost)
        {
            $post=$this->request->post();
            $user=Yii::$app->session->get('user');
            //var_dump($user['user_id']);die;
            $post['isdefault']=1;//设置默认地址isdefault=1;
            $post['userid']=$user['user_id'];
            if($this->address->load(['Address'=>$post])&&$this->address->validate())
            {
                if($this->address->save())
                {
                    Yii::$app->session->set('defaultAddress',$post);
                    $this->redirect(['order/confirm']);
                }
            }

        }
        return $this->render('consign',['model'=>$this->address,'country'=>$country]);
    }

    /**
     *查询下一地区
     */
    public function actionGetRegion(){
        $region_id=$this->request->get('region_id');
        $child=$this->region->getNextRegion($region_id);
        $options=$this->renderAjax('region',['child'=>$child]);

        Yii::$app->response->format=Response::FORMAT_JSON;
        Yii::$app->response->data=['code'=>1,'msg'=>$options];
        Yii::$app->end();
    }

    /**确认订单
     * @return string
     */
    public function actionConfirm(){
        $defaultAddress=$this->address->getDefaultAddress();//查询用户收货默认地址
        $cartList=$this->cart->getCartInfo();//购物车查询

        $shipWay=Yii::$app->params['shipWay'];//快递方式
        foreach($shipWay as $v)//默认邮费价格(显示使用)
        {
            if($v['isdefault'])
            {
                $shipPrice=$v['shipprice'];
            }
        }
        $payment=Yii::$app->params['payment'];//支付方式
        $model=$this->order;

        if(!isset($defaultAddress))//地址添加
        {
            $this->redirect(['order/consign']);
        }
        if(empty($cartList['goodsList']))//购物车为空
        {
            $this->redirect(['cart/cart']);
        }
        if($this->request->ispost)//下单开始
        {
            try{
                    $post=$this->request->post();

                    $data=array_merge($post,$defaultAddress);
                    $data['shipfee']=Yii::$app->params['shipWay'][$post['shipid']]['shipprice'];//总运费
                    $data['payamount']=$cartList['total']['prices'];//商品总金额
                    $discount=0;//折扣优惠
                    $data['realamount']=$data['payamount']+$data['shipfee'];//实际总金额（包运费）
                    $data['orderamount']=$data['realamount']-$discount;//订单总金额
                    $transaction=Yii::$app->db->beginTransaction();//事务开始
                    //进行添加订单
                    $order_id=$this->order->AddOrder($data);//订单id
                    if($order_id==false)
                    {
                        throw new Exception('one');
                    }
                    //订单商品入库
                    foreach($cartList['goodsList'] as $goods)
                    {
                        $orderGoods=new OrderGoods();
                        $goods['orderid']=$order_id;
                        if(!$orderGoods->AddGoods($goods))
                        {
                            throw new Exception('two');
                        }
                        //减少库存  已卖增加
                        $del=Goods::updateAllCounters(['goods_num'=>-$goods['buy_num'],'shop_num'=>+$goods['buy_num']],'goods_id=:goods_id',[':goods_id'=>$goods['goods_id']]);

                        if(!$del)
                        {
                            throw new Exception('three');
                        }

                    }
                    //清除购物车商品
                    $clearAllCart=$this->cart->clearAllCart();

                    if(!$clearAllCart>0)
                    {
                        throw new Exception('four');
                    }

                    $transaction->commit();//事务结束
                    $this->redirect(['order/success','orderid'=>$order_id]);
                }
                catch(Exception $e)
                {
                    $transaction->rollBack();
                }
        }//下单结束
        $data=[
            'goodsList'=>$cartList['goodsList'],
            'total'=>$cartList['total']['prices'],
            'Address'=>$defaultAddress,
            'shipWay'=>$shipWay,
            'payment'=>$payment,
            'model'=>$model,
            'shipPrice'=>$shipPrice,//默认邮费
        ];
        return $this->render('confirm',$data);
    }

    /**成功提交订单
     * @return string
     */
    public function actionSuccess(){
        $orderid=intval(Yii::$app->request->get('orderid'));
        try{
            if(!isset($orderid)||empty($orderid))
            {
                throw new Exception('服务器异常,请重试！');
            }
            $orderInfo=$this->order->getOrderInfo($orderid);
            if($orderInfo==null)
            {
                throw new Exception();
            }
            //支付方式
            if($orderInfo['paytype']=='alipay')
            {
                //支付宝付订单
                $alipay=new AlipayPay();
                $submit=$alipay->requestPay($orderInfo['orderno'],'尤洪商城',$orderInfo['orderamount'],'','',$orderInfo['paytype']);//返回隐形表单,除按钮

            }
            elseif($orderInfo['paytype']=='wechat')
            {
                //微信订单
                $submit='';
            }
            $data=[
                'orderno'=>$orderInfo['orderno'],//订单号
                'orderamount'=>$orderInfo['orderamount'],//总价
                'shipid'=>Yii::$app->params['shipWay'][$orderInfo['shipid']]['shipname'],//快递方式
                'paytype'=>Yii::$app->params['payment'][$orderInfo['paytype']]['payname'],//支付方式
                'submit'=>$submit,//支付按钮

            ];

            return $this->render('success',$data);
        }
        catch(Exception $e)
        {
            Yii::$app->session->setFlash('msg',$e->getMessage());
            $this->redirect(['message/message']);
        }

    }

    /**
     * 支付完成给予提示(同步)
     */
    public function actionReturn(){
        //接收参数
        $getData=Yii::$app->request->get();
        $alipay=new AlipayPay();
        $bool=$alipay->verifyReturn();
        if($bool)
        {
            if($getData['trade_status']=='TRADE_SUCCESS'||$getData['trade_status']=='TRADE_FINISHED')
            {
                $orderInfo=Order::find()->where(['orderno'=>$getData['out_trade_no']])->asArray()->one();
                //var_dump($orderInfo);die;
                if($orderInfo['paystatus']==0)//未支付时才修改（重复刷新会不断修改）
                {

                    $update=['paystatus'=>Order::IS_PAY,'paytime'=>time(),'tradeno'=>$getData['trade_no'],'payment'=>$getData['total_fee']];
                    Order::updateAll($update,'orderno=:orderno',['orderno'=>$getData['out_trade_no']]);
                    //写入支付日志
                    $payLog=new PayLog();
                    $result=$payLog->addLog($orderInfo['orderid'],$getData['total_fee'],$getData['extra_common_param'],json_encode($getData));

                    if($result)
                    {
                        echo 'success';
                        Yii::$app->session->setFlash('msg','恭喜！支付成功');
                        //跳转
                        $this->redirect(['message/message']);
                    }
                    else
                    {
                        echo 'error';
                    }
                }

            }

        }
        else
        {
            Yii::$app->session->setFlash('msg',':) 支付失败');
        }

    }
    /**
     * 支付完异步处理
     */
    public function actionNotify()
    {
        $data=$this->request->post();
        $alipay=new AlipayPay();
        $bool=$alipay->verifyNotify();
        if($bool)
        {
            if($data['trade_status']=='TRADE_SUCCESS'||$data['trade_status']=='TRADE_FINISHED')
            {
                $orderInfo=Order::find()->where(['orderno'=>$data['out_trade_no']])->asArray()->one();
                //var_dump($orderInfo);die;
                if($orderInfo['paystatus']==0)//未支付时才修改（重复刷新会不断修改）
                {

                    $update=['paystatus'=>Order::IS_PAY,'paytime'=>time(),'tradeno'=>$data['trade_no'],'payment'=>$data['total_fee']];
                    Order::updateAll($update,'orderno=:orderno',['orderno'=>$data['out_trade_no']]);
                    //写入支付日志
                    $payLog=new PayLog();
                    $result=$payLog->addLog($orderInfo['orderid'],$data['total_fee'],$data['extra_common_param'],json_encode($data));

                    if($result)
                    {
                        echo 'success';
                    }
                    else
                    {
                        echo 'error';
                    }
                }
                else
                {
                    echo 'success';
                }

            }
            else
            {
                echo 'success';
            }

        }
        else
        {
            echo 'error';
        }
    }

}